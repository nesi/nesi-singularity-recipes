BootStrap: docker
From: centos:centos7
%help
 	see https://github.com/nesi/nesi-virtual-desktops
%post
	export TURBOVNC_VERSION=2.2.4
	export WEBSOCKIFY_VERSION=0.9.0
	export FIREFOX_VERSION=9.0
	export VGL_VERSION=2.6.3
	export DESKTOP_VERSION=2.0

	yum -y update
	yum -y upgrade 
	yum -y install epel-release

	yum -y --enablerepo=epel install htop
	yum -y --enablerepo=epel install VirtualGL

	yum -y groups install "X Window System"
	yum -y groupinstall "Xfce"
    	yum -y install gnome-terminal
 	#yum -y install -y xfce-polkit # Needed to stop annoying policykit message.

	yum -y install less
	yum -y install wget
	yum -y install python
    	yum -y install numpy
	yum -y install git
	yum -y install bzip2
	yum -y install polkit
	yum -y install libvncserver
	yum -y install turbojpeg
	yum -y install -y gcc-c++ # Needed to compile Websocketify rebind lib.

	yum -y install mesa-libGLU
	
	yum -y install tcl-8.5.13-8.el7.x86_64 \
	install tcl-devel-8.5.13-8.el7.x86_64 \
	lua-5.1.4-15.el7.x86_64 \
	lua-bitop-1.0.2-3.el7.x86_64 \
	lua-devel-5.1.4-15.el7.x86_64 \
	lua-filesystem-1.6.2-2.el7.x86_64 \
	lua-json-1.3.2-2.el7.noarch \
	lua-lpeg-0.12-1.el7.x86_64 \
	lua-posix-32-2.el7.x86_64 \
	lua-term-0.03-3.el7.x86_64 
	
	mkdir -p /etc/yum.repos.d
    	cd /etc/yum.repos.d
	wget https://virtualgl.org/pmwiki/uploads/Downloads/VirtualGL.repo
    	yum -y install VirtualGL

	wget https://sourceforge.net/projects/turbovnc/files/${TURBOVNC_VERSION}/turbovnc-${TURBOVNC_VERSION}.x86_64.rpm -q
  	yum install -y turbovnc-${TURBOVNC_VERSION}.x86_64.rpm
  	rm -rf turbovnc-${TURBOVNC_VERSION}.x86_64.rpm
	#echo "\$wm=\"startxfce4\";" >> /etc/turbovncserver.conf
	
    	mkdir -p /opt/websockify
  	wget https://github.com/novnc/websockify/archive/master.tar.gz -q -O - | tar xzf - -C /opt/websockify --strip-components=1
	# Modify websockify.
	sed  '/.*self.msg("%s", msg)/i\        msg += \"\\n  - Now open a browser to http:\/\/localhost:\" + str(os.getenv(\"VNC_SOCKET_PORT\"))\n        msg += \"\\n  - Press CTRL + C to kill.\"' \
	/opt/websockify/websockify/websocketproxy.py
	cd /opt/websockify && make 
	
	mkdir -p /opt/noVNC
  	git clone https://github.com/novnc/noVNC/ /opt/noVNC
	echo "<meta http-equiv=\"refresh\" content=\"0; URL='vnc.html'\"/>" > /opt/noVNC/index.html

	# Firefox 
	yum install -y firefox
	
	# VScode
	rpm --import https://packages.microsoft.com/keys/microsoft.asc
	echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" >> /etc/yum.repos.d/vscode.repo
	yum -y install code
	
%environment
	export LC_ALL=C
  	export PATH=${PATH}:/opt/TurboVNC/bin:/opt/slurm/bin
    	export LANG="en_US.UTF-8"
    	export LANGUAGE="en_US"
	export VGL_VERBOSE=1
	export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/websockify
	export TZ="Pacific/Auckland"
	
	#SLURM
	export CPATH=/opt/slurm/include
	export PATH="/opt/slurm/sbin:$PATH"
	export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/slurm/lib64:/opt/slurm/lib64/slurm"
	export LIBRARY_PATH="$LIBRARY_PATH:/opt/slurm/lib64:/opt/slurm/lib64/slurm"
	
	#LMOD
	#export LMOD_DIR=/usr/share/lmod/lmod/libexec
	#export LMOD_arch=x86_64
	#export LMOD_CMD=/usr/share/lmod/lmod/libexec/lmod
	#export ENABLE_LMOD=1
	#export LMOD_SETTARG_CMD=:
	##export LMOD_PREPEND_BLOCK=normal
	#export LMOD_sys=Linux
	
%startscript     
    # If started on node other than host, create remote tunnel.
    if [[ -n ${VDT_TUNNEL_HOST} ]];then 
        ssh -v -o ExitOnForwardFailure=yes -N -R ${VDT_SOCKET_PORT}:localhost:${VDT_SOCKET_PORT} ${VDT_TUNNEL_HOST} & 
        tunnel_pid="$!"
        sleep 5
        if [[ "$(ps -o s -h -p $tunnel_pid)"! = [SR] ]];then
    	    echo "Failed to open tunnel from $(hostname)"
	    exit 1
	fi
    fi

    # vncserver ${VDT_VNCOPTS} -wm xfce4-session -autokill -securitytypes TLSNone,X509None,None :${VDT_DISPLAY_PORT} && /opt/websockify/run ${VDT_WEBSOCKOPTS} --web /opt/noVNC localhost:${VDT_SOCKET_PORT} :$((5900 + ${VDT_DISPLAY_PORT})) 
%runscript 
    # Runscript is run for 'ephemeral' sessions.
    # /opt/websockify/run --web /opt/noVNC localhost:$VDT_SOCKET_PORT :$(($(vncserver -list | grep -o [0-9]* | head -1)-5900))
    # /opt/websockify/run ${VDT_WEBSOCKOPT} --web /opt/noVNC localhost:${VDT_SOCKET_PORT} :$((5900+$(vncserver -wm xfce4-session -autokill -securitytypes TLSNone,X509None,None 2>&1 | grep -oP '(?<=:).*?(?= )' | head -n1)))
    if [[ -x "$VDT_SETUP" ]]; then source "$VDT_SETUP";fi
    if [[ -z $VDT_DISPLAY_PORT || -z $VDT_SOCKET_PORT ]]; then echo "'VDT_DISPLAY_PORT' & 'VDT_SOCKET_PORT' must be set";exit 1;fi
     
    vncserver ${VDT_VNCOPTS} -wm xfce4-session -autokill -securitytypes TLSNone,X509None,None :${VDT_DISPLAY_PORT} && /opt/websockify/run ${VDT_WEBSOCKOPTS} --web /opt/noVNC localhost:${VDT_SOCKET_PORT} :$((5900 + ${VDT_DISPLAY_PORT})) 
